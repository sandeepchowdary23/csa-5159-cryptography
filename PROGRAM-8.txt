#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define ALPHABET "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
void generate_cipher_alphabet(const char *keyword, char *cipher_alphabet) {
    int used[26] = {0};
    int index = 0;
    for (int i = 0; keyword[i] != '\0'; i++) {
        char ch = toupper(keyword[i]);
        if (ch >= 'A' && ch <= 'Z' && !used[ch - 'A']) {
            cipher_alphabet[index++] = ch;
            used[ch - 'A'] = 1;
        }
    }
    for (char ch = 'A'; ch <= 'Z'; ch++) {
        if (!used[ch - 'A']) {
            cipher_alphabet[index++] = ch;
        }
    }
    cipher_alphabet[index] = '\0';
}
void cipher(const char *text, const char *cipher_alphabet, char *result, int decrypt) {
    char reverse_cipher[26];
    for (int i = 0; i < 26; i++) {
        reverse_cipher[cipher_alphabet[i] - 'A'] = 'A' + i;
    }
    for (int i = 0; text[i] != '\0'; i++) {
        char ch = toupper(text[i]);
        if (ch >= 'A' && ch <= 'Z') {
            result[i] = decrypt ? reverse_cipher[ch - 'A'] : cipher_alphabet[ch - 'A'];
        } else {
            result[i] = text[i];
        }
    }
    result[strlen(text)] = '\0';
}
int main() {
    char keyword[] = "CIPHER";
    char cipher_alphabet[27];
    char message[] = "HELLO WORLD";
    char encrypted_message[100];
    char decrypted_message[100];
    generate_cipher_alphabet(keyword, cipher_alphabet);
    printf("Cipher Alphabet: %s\n", cipher_alphabet);
    cipher(message, cipher_alphabet, encrypted_message, 0);
    printf("Encrypted Message: %s\n", encrypted_message);
    cipher(encrypted_message, cipher_alphabet, decrypted_message, 1);
    printf("Decrypted Message: %s\n", decrypted_message);
    return 0;
}

OUTPUT:
Cipher Alphabet: CIPHERABDFGJKLMNOQSTUVWXYZ
Encrypted Message: BEJJM WMQJH
Decrypted Message: HELLO WORLD
